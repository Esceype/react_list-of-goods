{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","sortAlphabetically","setState","ALPABET","sortByLength","LENGTH","reset","reverse","this","reorderedGoods","goods","visibleGoods","sort","g1","g2","localeCompare","length","getReorderedGoods","isChanged","className","type","classNames","onClick","map","good","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,+FAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KA8CE,IAAME,EAAb,4MACEC,MAAQ,CAAEC,YAAY,EAAOC,SAAUL,EAASM,MADlD,EAGEC,mBAAqB,WACnB,EAAKC,SAAS,CAAEH,SAAUL,EAASS,WAJvC,EAOEC,aAAe,WACb,EAAKF,SAAS,CAAEH,SAAUL,EAASW,UARvC,EAWEC,MAAQ,WACN,EAAKJ,SAAS,CACZH,SAAUL,EAASM,KACnBF,YAAY,KAdlB,EAkBES,QAAU,WACR,EAAKL,UAAS,SAAAL,GAAK,MAAK,CACtBC,YAAaD,EAAMC,gBApBzB,4CAwBE,WACE,MAAiCU,KAAKX,MAA9BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SACdU,EA5DH,SACLC,EADK,GAGJ,IADCX,EACF,EADEA,SAAUD,EACZ,EADYA,WAGNa,EAAY,YAAOD,GAoBzB,OAlBAC,EAAaC,MAAK,SAACC,EAAIC,GACrB,OAAQf,GACN,KAAKL,EAASS,QACZ,OAAOU,EAAGE,cAAcD,GAE1B,KAAKpB,EAASW,OACZ,OAAOQ,EAAGG,OAASF,EAAGE,OAExB,KAAKtB,EAASM,KACd,QACE,OAAO,MAITF,GACFa,EAAaJ,UAGRI,EAmCkBM,CAAkBtB,EAAiBa,KAAKX,OACzDqB,EAAYpB,GAAcC,IAAaL,EAASM,KAEtD,OACE,sBAAKmB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CACE,WAAYtB,IAAaL,EAASS,UAGtCmB,QAASd,KAAKP,mBARhB,iCAaA,wBACEmB,KAAK,SACLD,UAAWE,IACT,oBACA,CACE,WAAYtB,IAAaL,EAASW,SAGtCiB,QAASd,KAAKJ,aARhB,4BAaA,wBACEgB,KAAK,SACLD,UAAWE,IACT,oBACA,CACE,YAAavB,IAGjBwB,QAASd,KAAKD,QARhB,qBAaCW,GACC,wBACEE,KAAK,SACLD,UAAU,4BACVG,QAASd,KAAKF,MAHhB,sBAWJ,6BACGG,EAAec,KAAI,SAAAC,GAAI,OACtB,oBAAe,UAAQ,OAAvB,SACGA,GADMA,eArFrB,GAAyBC,aC7DzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.cf2d28f3.chunk.js","sourcesContent":["import { Component } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  // To avoid the original array mutation\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((g1, g2) => {\n    switch (sortType) {\n      case SortType.ALPABET:\n        return g1.localeCompare(g2);\n\n      case SortType.LENGTH:\n        return g1.length - g2.length;\n\n      case SortType.NONE:\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\n// DON'T save goods to the state\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends Component<{}, State> {\n  state = { isReversed: false, sortType: SortType.NONE };\n\n  sortAlphabetically = () => {\n    this.setState({ sortType: SortType.ALPABET });\n  };\n\n  sortByLength = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  reset = () => {\n    this.setState({\n      sortType: SortType.NONE,\n      isReversed: false,\n    });\n  };\n\n  reverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n    const reorderedGoods = getReorderedGoods(goodsFromServer, this.state);\n    const isChanged = isReversed || sortType !== SortType.NONE;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-info',\n              {\n                'is-light': sortType !== SortType.ALPABET,\n              },\n            )}\n            onClick={this.sortAlphabetically}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-success',\n              {\n                'is-light': sortType !== SortType.LENGTH,\n              },\n            )}\n            onClick={this.sortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-warning',\n              {\n                'is-light': !isReversed,\n              },\n            )}\n            onClick={this.reverse}\n          >\n            Reverse\n          </button>\n\n          {isChanged && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.reset}\n            >\n              Reset\n            </button>\n          )}\n\n        </div>\n\n        <ul>\n          {reorderedGoods.map(good => (\n            <li key={good} data-cy=\"Good\">\n              {good}\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}